Basic Outline of Algorithm
---------------------------
Input: original piece

Analysis of music => backing chord progression
	driven by cached database of chords
	database of chord transition probabilities
		here we use "=>" to mean transitioning to
		I => same chord: 1/2
		I => IV: 1/4
		I => V: 1/4
		all others: 0
		NOTE: major <=> minor: 0
	can be used to generate many different types of variations based on probabilistic behavior

Use chord progression to establish a diatonic collection

At each chord, use principles of Schoenberg applied to notes in original composition to create variation in sequence that remains intact with the estabished diatonic collection

Output: variation with backing chord progression

Problems needed to address with Dr. Stallmann
---------------------------------------------
* This implementation uses a single pass to create a variation. Can or should we use multiple passes to create an "improved" variation?
* The chord transition matrix is currently inexact at this point as many pertinent values have been set to zero for this model. How do we account for the various different chord transitions in music theory?
* At this point, note membership in a chord is considered uniform. Should we weight note membership such that notes are associated more strongly in one chord than in another? This would provide a secondary probabilistic weighting to the chord transition probabilities.